import React, { Suspense, useState } from 'react'
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
// import dynamic from "next/dynamic";
// import { useRouter } from 'next/router';

// @ts-ignore 
const Page2 = React.lazy(() => import("child2/pages/page2"))
// @ts-ignore 
const Page1 = React.lazy(() => import("child2/pages/page1"))
// @ts-ignore 
const Blog = React.lazy(()=> import("child1/pages/blog/index"))

// @ts-ignore 
const Header = React.lazy(() => import("child1/header"))

// @ts-ignore 
const Child1 = React.lazy(() => import("child1/ChildApp1"), { ssr: false })

// @ts-ignore 
const Child2 = React.lazy(() => import("child2/ChildApp2"), { ssr: false })

// @ts-ignore 
//const Child3 = React.lazy(() => import("child3/ChildApp3"), { ssr: false })

const detectEnvironment = () => (typeof window === 'undefined') ? "Server Component" : "Client Component"

export default function Home() {
  // const router = useRouter();
  console.log(detectEnvironment());

  return (
    <>
      <Head>
        <title>n13 shell 8080</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.common}`}>
        {/* <h2>Shell App (Next 13 PORT 8080)</h2> */}

        {/* <Suspense fallback={<div>loading...</div>}><Header /></Suspense> */}
        {/* <Suspense fallback={<div>loading...</div>}><Card>Hello</Card></Suspense> */}
        <Suspense fallback={<div>loading...</div>}><Child1 /></Suspense>

        <Suspense fallback={<div>loading...</div>}><Child2 /></Suspense>
      </main>
    </>
  )
}



//import Link from 'next/link';
// @ts-ignore const Card = React.lazy(() => import("child1/card"))
// @ts-ignore const Blog = React.lazy(() => import("child1/blog"))
/** To avoid hydration errors, use React.lazy instead of next/dynamic for lazy loading federated components. */
//const App2Root = dynamic(() => import('child2/ChildApp'));